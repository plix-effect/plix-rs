{"version":3,"sources":["webpack://@plix-effect/rs/./frontend/src/ui/components/control/player/PlixPlayerView.tsx","webpack://@plix-effect/rs/./frontend/src/ui/components/page/main/MainPage.tsx"],"names":[],"mappings":"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","file":"25cfde1-index-wps-hmr.js","sourcesContent":["import React, {FC, useMemo} from \"react\";\r\nimport {PlayerTitle} from \"./PlayerTitle\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {PlayerCoverImageBackground} from \"./PlayerCoverImageBackground\";\r\nimport {PlayerCoverImage} from \"./PlayerCoverImage\";\r\nimport {PlayerProgressBar} from \"./PlayerProgressBar\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\nimport {useServerPlixPlayer} from \"../../../use/socket/useServerPlixPlayer\";\r\nimport {useServerTimeOffset} from \"../../../use/socket/useServerTimeOffset\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        position: \"relative\",\r\n        height: \"220px\",\r\n        minHeight: \"220px\",\r\n        width: \"100%\",\r\n        borderBottom: \"1px solid white\"\r\n    },\r\n    container: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        top: 0,\r\n        left: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    middleRow: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\",\r\n        width: \"100%\",\r\n    }\r\n}), {classNamePrefix: \"PlixPlayerView\"})\r\n\r\nexport const PlixPlayerView: FC = () => {\r\n    const classes = useStyles();\r\n    const {state, play, pause, stop, selectPlix} = useServerPlixPlayer();\r\n    const [offset] = useServerTimeOffset();\r\n\r\n    const [playing, changeStatusActionsAllowed, currentTrackName, playingFromTime] = useMemo(() => {\r\n        const playing = state.status === \"play\";\r\n        const changeStatusActionsAllowed = [\"play\",\"pause\", \"stop\"].includes(state.status);\r\n\r\n        let currentTrackName = \"(No Track)\";\r\n        let duration = null;\r\n        if (state.status === \"loading\") {\r\n            currentTrackName = \"(Loading track)\"\r\n        } else  if (state.playingObject) {\r\n            currentTrackName = state.playingObject.track.name;\r\n        }\r\n\r\n        const playingFromTime = state.playFromTime == null ? null : state.playFromTime + offset;\r\n\r\n        return [playing, changeStatusActionsAllowed, currentTrackName, playingFromTime]\r\n    }, [state, offset])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.root}>\r\n                <PlayerCoverImageBackground trackName={currentTrackName}/>\r\n                <div className={classes.container}>\r\n                    <PlayerProgressBar playing={playing} duration={state.duration} playingFromTime={playingFromTime} pauseTime={state.pauseTime}/>\r\n                    <div className={classes.middleRow}>\r\n                        <IconButton color={\"default\"} disabled={!changeStatusActionsAllowed} onClick={playing ? pause : play}>\r\n                            {\r\n                                playing ?\r\n                                    <PauseIcon fontSize=\"large\" />\r\n                                :\r\n                                    <PlayArrowIcon fontSize=\"large\" />\r\n                            }\r\n                        </IconButton>\r\n                        <PlayerCoverImage trackName={currentTrackName}/>\r\n                        <IconButton color={\"default\"} disabled={!changeStatusActionsAllowed} onClick={stop}>\r\n                            <StopIcon fontSize=\"large\" />\r\n                        </IconButton>\r\n                    </div>\r\n                    <PlayerTitle title={currentTrackName}/>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}","import React, {FC, useEffect, useState} from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {DefaultPageAppBar} from \"../../app/DefaultAppBar\";\r\nimport {Paper} from \"@material-ui/core\";\r\nimport {usePlixFiles} from \"../../../use/socket/usePlixFiles\";\r\nimport {useServerPlixPlayer} from \"../../../use/socket/useServerPlixPlayer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {PlixFileSelector} from \"../../control/PlixFileSelector\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {PlixPlayerView} from \"../../control/player/PlixPlayerView\";\r\nimport {TrackListView} from \"../../control/list/TrackListView\";\r\nimport {MainPageFab} from \"./MainPageFab\";\r\nimport {DragonDropPlixArea} from \"./DragonDropPlixArea\";\r\nimport {useDragonDropUploader} from \"../../../use/useDragonDropUploader\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        flexGrow: 1,\r\n        flexDirection: \"column\"\r\n    },\r\n    paper: {\r\n        flex: 1,\r\n        borderRadius: 0\r\n    },\r\n    container: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n        height: \"calc(100vh - 56px)\",\r\n        overflow: \"hidden\"\r\n    }\r\n}), {classNamePrefix: \"MainPage\"})\r\n\r\nexport const MainPage: FC = () => {\r\n    const classes = useStyles();\r\n    const [dragonDropDiv,setDragonDropDiv] = useState<HTMLDivElement>();\r\n    const dragonDropHighlight = useDragonDropUploader(dragonDropDiv);\r\n\r\n    return (\r\n        <>\r\n            <div ref={setDragonDropDiv} className={classes.root}>\r\n                <DefaultPageAppBar title={\"PLIX RS\"}/>\r\n                <MainPageFab/>\r\n                <Paper  elevation={0} className={classes.paper}>\r\n                    <div className={classes.container}>\r\n                        <PlixPlayerView/>\r\n                        <TrackListView/>\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n            {dragonDropHighlight}\r\n        </>\r\n    )\r\n}"],"sourceRoot":""}